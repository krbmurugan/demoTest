{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\_BR\\\\Learn\\\\Wtsnxt_Codes\\\\learnReact\\\\to-do\\\\src\\\\components\\\\counter\\\\counter.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Counter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counter: 0\n    };\n    this.increment = this.increment.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  increment(by) {\n    // console.log('Increment clicked', this.props.by, this.props.name);\n    // this.state.counter++;\n    this.setState(prevState => {\n      return {\n        counter: prevState.counter + by\n      };\n    });\n  }\n\n  reset() {\n    this.setState({\n      counter: 0\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 1,\n        incremMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 5,\n        incremMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 10,\n        incremMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CounterButton, {\n        incremMethod: this.increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass CounterButton extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counter: 0\n    }; // this.increment = this.increment.bind(this);\n\n    this.decrement = this.decrement.bind(this);\n  }\n  /* increment() {\r\n      // console.log('Increment clicked', this.props.by, this.props.name);\r\n      // this.state.counter++;\r\n      this.setState({\r\n          counter: this.state.counter + this.props.by\r\n      })\r\n      this.props.incremMethod(this.props.by)\r\n  } */\n\n\n  decrement() {\n    // console.log('Increment clicked', this.props.by, this.props.name);\n    // this.state.counter++;\n    this.setState({\n      counter: this.state.counter - this.props.by\n    });\n    this.props.incremMethod(this.props.by * -1);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.incremMethod(this.props.by),\n        children: [\"+\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.incremMethod(this.props.by * -1),\n        children: [\"-\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nCounterButton.defaultProps = {\n  by: 4,\n  name: 'test'\n};\nCounterButton.propTypes = {\n  by: PropTypes.number\n};\nexport default Counter;","map":{"version":3,"sources":["C:/_BR/Learn/Wtsnxt_Codes/learnReact/to-do/src/components/counter/counter.jsx"],"names":["React","Component","PropTypes","Counter","constructor","state","counter","increment","bind","reset","by","setState","prevState","render","CounterButton","decrement","props","incremMethod","defaultProps","name","propTypes","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Counter extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            counter: 0\r\n        }\r\n        this.increment = this.increment.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n    }\r\n\r\n    increment(by) {\r\n        // console.log('Increment clicked', this.props.by, this.props.name);\r\n        // this.state.counter++;\r\n        this.setState(\r\n            (prevState) => {\r\n                return { counter: prevState.counter + by }\r\n            })\r\n    }\r\n\r\n    reset() {\r\n        this.setState({ counter: 0 })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CounterButton by={1} incremMethod={this.increment} />\r\n                <CounterButton by={5} incremMethod={this.increment} />\r\n                <CounterButton by={10} incremMethod={this.increment} />\r\n                <CounterButton incremMethod={this.increment} />\r\n                <span >{this.state.counter}</span>\r\n                <button onClick={this.reset}>Reset</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nclass CounterButton extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            counter: 0\r\n        }\r\n        // this.increment = this.increment.bind(this);\r\n        this.decrement = this.decrement.bind(this);\r\n    }\r\n\r\n    /* increment() {\r\n        // console.log('Increment clicked', this.props.by, this.props.name);\r\n        // this.state.counter++;\r\n        this.setState({\r\n            counter: this.state.counter + this.props.by\r\n        })\r\n        this.props.incremMethod(this.props.by)\r\n    } */\r\n\r\n    decrement() {\r\n        // console.log('Increment clicked', this.props.by, this.props.name);\r\n        // this.state.counter++;\r\n        this.setState({\r\n            counter: this.state.counter - this.props.by\r\n        })\r\n        this.props.incremMethod(this.props.by * (-1))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={() => this.props.incremMethod(this.props.by)}>+{this.props.by}</button>\r\n                <button onClick={() => this.props.incremMethod(this.props.by * -1)}>-{this.props.by}</button>\r\n                <span >{this.state.counter}</span>\r\n            </div >\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nCounterButton.defaultProps = {\r\n    by: 4,\r\n    name: 'test'\r\n}\r\n\r\nCounterButton.propTypes = {\r\n    by: PropTypes.number\r\n\r\n}\r\n\r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}